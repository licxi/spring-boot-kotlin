spring.datasource.druid.master.url: jdbc:mysql://localhost:3306/springboot
spring.datasource.druid.master.username: root
spring.datasource.druid.master.password: 123456
spring.datasource.druid.master.driver-class-name: com.mysql.jdbc.Driver
# 使用druid数据源
spring.datasource.druid.master.type: com.alibaba.druid.pool.DruidDataSource
spring.datasource.druid.master.initialSize: 5
spring.datasource.druid.master.minIdle: 5
spring.datasource.druid.master.maxActive: 20
# 配置获取连接等待超时的时间
spring.datasource.druid.master.maxWait: 60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.master.timeBetweenEvictionRunsMillis: 60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.master.minEvictableIdleTimeMillis: 300000
spring.datasource.druid.master.validationQuery: SELECT 1 FROM DUAL
spring.datasource.druid.master.testWhileIdle: true
spring.datasource.druid.master.testOnBorrow: false
spring.datasource.druid.master.testOnReturn: false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.druid.master.poolPreparedStatements: true
spring.datasource.druid.master.maxPoolPreparedStatementPerConnectionSize: 20
#spring.datasource.druid.master.url: # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.druid.master.filters: stat,wall,log4j


spring.datasource.druid.cluster.url: jdbc:mysql://localhost:3306/kotlin
spring.datasource.druid.cluster.username: root
spring.datasource.druid.cluster.password: 123456
spring.datasource.druid.cluster.driver-class-name: com.mysql.jdbc.Driver
        # 使用druid数据源
spring.datasource.druid.cluster.type: com.alibaba.druid.pool.DruidDataSource
spring.datasource.druid.cluster.initialSize: 5
spring.datasource.druid.cluster.minIdle: 5
spring.datasource.druid.cluster.maxActive: 20
        # 配置获取连接等待超时的时间
spring.datasource.druid.cluster.maxWait: 60000
        # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.cluster.timeBetweenEvictionRunsMillis: 60000
        # 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.cluster.minEvictableIdleTimeMillis: 300000
spring.datasource.druid.cluster.validationQuery: SELECT 1 FROM DUAL
spring.datasource.druid.cluster.testWhileIdle: true
spring.datasource.druid.cluster.testOnBorrow: false
spring.datasource.druid.cluster.testOnReturn: false
        # 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.druid.cluster.poolPreparedStatements: true
spring.datasource.druid.cluster.maxPoolPreparedStatementPerConnectionSize: 20
        # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.druid.cluster.filters: stat,wall,log4j
      # 合并多个DruidDataSource的监控数据
      #useGlobalDataSourceStat: true
      # WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter
spring:
  datasource:
    druid:
        web-stat-filter:
          enabled: true #是否启用StatFilter默认值true
          url-pattern: /*
          exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*"
        # StatViewServlet配置，说明请参考Druid Wiki，配置_StatViewServlet配置
        stat-view-servlet:
          enabled: true #是否启用StatViewServlet默认值true
          url-pattern: /druid/*
          reset-enable: false
          login-username: admin
          login-password: admin
          #llow:
          #deny:
        # Spring监控配置，说明请参考Druid Github Wiki，配置_Druid和Spring关联监控配置
        aop-patterns: com.example.bootkotlin.service.impl.*
        filter:
          stat:
            enabled: true # Spring监控AOP切入点，如x.y.z.service.*,配置多个英文逗号分隔
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
          hibernate:
            format_sql: true
#logback 配置
logging.config: classpath:logback-boot.xml
spring.jpa.open-in-view: true

#spring.mvc.throw-exception-if-no-handler-found: true #处理404 500等异常
#spring.resources.add-mappings: false

spring.thymeleaf.cache: false #开发过程关闭模板缓存
spring.thymeleaf.mode: LEGACYHTML5


